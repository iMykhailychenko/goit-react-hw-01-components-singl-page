{"version":3,"sources":["components/transaction-history/TransactionHistory.module.css","components/social-profile/Profile.module.css","components/friends-list/friends-item/FriendsItem.module.css","components/friends-list/FriendsList.module.css","components/social-profile/Profile.jsx","components/statistics/Statistics.styled.js","components/statistics/random-color.js","components/statistics/Statistics.jsx","components/friends-list/friends-item/FriendsItem.jsx","components/friends-list/FriendsList.jsx","components/transaction-history/TransactionHistory.jsx","components/App.jsx","index.js"],"names":["module","exports","Profile","user","stats","avatar","name","tag","location","statistic","Object","entries","className","styles","profile","description","src","alt","map","item","index","key","st_items","element","secondIndex","StatSection","styled","section","StatTitle","h2","StatList","ul","StatItem","li","StatLabel","span","StatPercentage","getColor","randomColor","Math","round","random","colorArr","fontColor","reduce","acum","background","join","color","Statistics","title","statisticalData","colors","id","style","backgroundColor","label","percentage","defaultProps","undefined","FriendsItem","friends","isOnline","online","offline","FriendList","friendsList","TransactionHistory","transactions","cx","table","row","head","type","amount","currency","App","FriendsList","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4ffbfa53.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__cbf6z\",\"head\":\"TransactionHistory_head__1hot9\",\"item\":\"TransactionHistory_item__1ghlw\",\"row\":\"TransactionHistory_row__1qLPR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3Jd9C\",\"description\":\"Profile_description__1qHE9\",\"avatar\":\"Profile_avatar__3a_ay\",\"stats\":\"Profile_stats__1jZXh\",\"st_items\":\"Profile_st_items__2BxGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsItem_item__3SqiN\",\"online\":\"FriendsItem_online__2IhTS\",\"offline\":\"FriendsItem_offline__2B1Bi\",\"avatar\":\"FriendsItem_avatar___Wum-\",\"name\":\"FriendsItem_name__2FBRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsList\":\"FriendsList_friendsList__12zfu\"};","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ user: { stats, avatar, name, tag, location } }) => {\n  const statistic = Object.entries(stats);\n\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>{`@${tag}`}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        {statistic.map((item, index) => (\n          <li key={index} className={styles.st_items}>\n            {item.map((element, secondIndex) => (\n              <span key={secondIndex}>{element}</span>\n            ))}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.objectOf(PropTypes.number.isRequired).isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","import styled from 'styled-components';\n\nconst StatSection = styled.section`\n  width: 100%;\n  margin: 60px auto;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nconst StatTitle = styled.h2`\n  padding-bottom: 50px;\n  font-size: 16px;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nconst StatList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  list-style: none;\n`;\n\nconst StatItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-basis: 18%;\n  min-height: 100px;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: 0.3s;\n  :hover {\n    opacity: 0.4;\n  }\n`;\n\nconst StatLabel = styled.span`\n  padding-top: 10px;\n  font-size: 12px;\n`;\n\nconst StatPercentage = styled.span`\n  padding-top: 8px;\n  font-size: 18px;\n`;\n\nexport {\n  StatSection,\n  StatTitle,\n  StatList,\n  StatItem,\n  StatLabel,\n  StatPercentage,\n};\n","const getColor = () => {\n  const randomColor = () => Math.round(Math.random() * 255);\n  const colorArr = [randomColor(), randomColor(), randomColor()];\n  const colorSum = colorArr.reduce((acum, item) => acum + item, 0);\n  const fontColor = colorSum < 550 ? '#fff' : '#555';\n\n  const background = `rgb(${colorArr.join(',')})`;\n  const color = fontColor;\n\n  return { background, color };\n};\n\nexport default getColor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StatSection,\n  StatTitle,\n  StatList,\n  StatItem,\n  StatLabel,\n  StatPercentage,\n} from './Statistics.styled';\nimport getColor from './random-color';\n\nconst Statistics = ({ title, statisticalData }) => (\n  <StatSection>\n    {title && <StatTitle>{title}</StatTitle>}\n    <StatList>\n      {statisticalData.map(element => {\n        const colors = getColor();\n\n        return (\n          <StatItem\n            key={element.id}\n            // Не нашел решение, как можно сделать рандомную заливку и при этом\n            // чтобы каждый тег li имел разный цвет.\n            // Могу только сделать с помощью styledcomponent все li одинакового цвета\n            // но при этом при каждом рендкре цвет будет меняться\n            style={{ backgroundColor: colors.background, color: colors.color }}\n          >\n            <StatLabel>{element.label}</StatLabel>\n            <StatPercentage>{element.percentage}%</StatPercentage>\n          </StatItem>\n        );\n      })}\n    </StatList>\n  </StatSection>\n);\n\nStatistics.defaultProps = {\n  title: undefined,\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  statisticalData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendsItem.module.css';\n\nconst FriendsItem = ({ friends }) => {\n  return (\n    <>\n      {friends.map(({ id, isOnline, avatar, name }) => (\n        <li key={id} className={styles.item}>\n          <span className={isOnline ? styles.online : styles.offline} />\n          <img className={styles.avatar} src={avatar} alt=\"avatar\" />\n          <p className={styles.name}>{name}</p>\n        </li>\n      ))}\n    </>\n  );\n};\n\nFriendsItem.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendsItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendsItem from './friends-item/FriendsItem';\nimport styles from './FriendsList.module.css';\n\nconst FriendList = ({ friends }) => (\n  <ul className={styles.friendsList}>\n    <FriendsItem friends={friends} />\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => (\n  <table className={cx('transaction-history ', styles.table)}>\n    <thead>\n      <tr className={styles.row}>\n        <th className={styles.head}>Type</th>\n        <th className={styles.head}>Amount</th>\n        <th className={styles.head}>Currency</th>\n      </tr>\n    </thead>\n    <tbody>\n      {transactions.map(({ id, type, amount, currency }) => (\n        <tr key={id} className={styles.row}>\n          <td className={styles.item}>{type}</td>\n          <td className={styles.item}>{amount}</td>\n          <td className={styles.item}>{currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\n\n// import components\nimport Profile from './social-profile/Profile';\nimport Statistics from './statistics/Statistics';\nimport FriendsList from './friends-list/FriendsList';\nimport TransactionHistory from './transaction-history/TransactionHistory';\n\n// import data\nimport user from './social-profile/user.json';\nimport statisticalData from './statistics/statistical-data.json';\nimport friends from './friends-list/friends.json';\nimport transactions from './transaction-history/transactions.json';\nimport './base.css';\n\nconst App = () => (\n  <div className=\"container\">\n    <Profile user={{ ...user }} />\n    <FriendsList friends={friends} />\n    <Statistics title=\"Upload stats\" statisticalData={statisticalData} />\n    <TransactionHistory transactions={transactions} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}